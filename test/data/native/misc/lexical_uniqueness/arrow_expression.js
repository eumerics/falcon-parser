//- duplicate_symbol
(a, a) => {} //? <-> @1:5
([a, a]) => {} //? <-> @1:6
(a, a = 0) => {} //? <-> @1:5
(a, [a]) => {} //? <-> @1:6
(a, {a}) => {} //? <-> @1:6
(a, ...a) => {} //? <-> @1:8
(a = 0, a) => {} //? <-> @1:9
([a], a) => {} //? <-> @1:7
({a}, a) => {} //? <-> @1:7
([a], {a}) => {} //? <-> @1:8
(a, a, b = 0) => {} //? <-> @1:5
(a, a, [b]) => {} //? <-> @1:5
(a, a, {b}) => {} //? <-> @1:5
a => { var a; } //? <+>
a => { let a; } //? <-> @1:12
(a) => { var a; } //? <+>
(a) => { let a; } //? <-> @1:14
([a]) => { var a; } //? <+>
([a]) => { let a; } //? <-> @1:16
({a}) => { var a; } //? <+>
({a}) => { let a; } //? <-> @1:16
(...a) => { var a; } //? <+>
(...a) => { let a; } //? <-> @1:17
(a = 0) => { var a; } //? <+>
(a = 0) => { let a; } //? <-> @1:18
({a = 0}) => { var a; } //? <+>
({a = 0}) => { let a; } //? <-> @1:20
([{a}]) => { var a; } //? <+>
([{a}]) => { let a; } //? <-> @1:18
({a: [b]}) => { var b; } //? <+>
({a: [b]}) => { let b; } //? <-> @1:21
([a, {b = 0}]) => { var b; } //? <+>
([a, {b = 0}]) => { let b; } //? <-> @1:25

//- duplicate_symbol
async (a, a) => {} //? <-> @1:11
async ([a, a]) => {} //? <-> @1:12
async (a, a = 0) => {} //? <-> @1:11
async (a, [a]) => {} //? <-> @1:12
async (a, {a}) => {} //? <-> @1:12
async (a, ...a) => {} //? <-> @1:14
async (a = 0, a) => {} //? <-> @1:15
async ([a], a) => {} //? <-> @1:13
async ({a}, a) => {} //? <-> @1:13
async ([a], {a}) => {} //? <-> @1:14
async (a, a, b = 0) => {} //? <-> @1:11
async (a, a, [b]) => {} //? <-> @1:11
async (a, a, {b}) => {} //? <-> @1:11
async a => { var a; } //? <+>
async a => { let a; } //? <-> @1:18
async (a) => { var a; } //? <+>
async (a) => { let a; } //? <-> @1:20
async ([a]) => { var a; } //? <+>
async ([a]) => { let a; } //? <-> @1:22
async ({a}) => { var a; } //? <+>
async ({a}) => { let a; } //? <-> @1:22
async (...a) => { var a; } //? <+>
async (...a) => { let a; } //? <-> @1:23
async (a = 0) => { var a; } //? <+>
async (a = 0) => { let a; } //? <-> @1:24
async ({a = 0}) => { var a; } //? <+>
async ({a = 0}) => { let a; } //? <-> @1:26
async ([{a}]) => { var a; } //? <+>
async ([{a}]) => { let a; } //? <-> @1:24
async ({a: [b]}) => { var b; } //? <+>
async ({a: [b]}) => { let b; } //? <-> @1:27
async ([a, {b = 0}]) => { var b; } //? <+>
async ([a, {b = 0}]) => { let b; } //? <-> @1:31
